/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package domain;

import java.util.HashSet;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

public class ConversorDivisas extends javax.swing.JFrame {

    //Para guardar la moneda que se selecciono en el combo box
    private String divisa1 = "";
    private String divisa2 = "";
    private String cantidad = "";
    private double dinero, cambio;
    private boolean punto = true;

    public ConversorDivisas() {
        initComponents();
        this.setSize(360, 500);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panel2 = new javax.swing.JPanel();
        etiquetaDivisa1 = new javax.swing.JLabel();
        etiquetaDinero1 = new javax.swing.JLabel();
        comboDivisas1 = new javax.swing.JComboBox<>();
        etiquetaDivisa2 = new javax.swing.JLabel();
        etiquetaCambio2 = new javax.swing.JLabel();
        comboDivisas2 = new javax.swing.JComboBox<>();
        botonClear = new javax.swing.JButton();
        botoonDelete = new javax.swing.JButton();
        boton7 = new javax.swing.JButton();
        boton8 = new javax.swing.JButton();
        boton9 = new javax.swing.JButton();
        boton4 = new javax.swing.JButton();
        boton5 = new javax.swing.JButton();
        boton6 = new javax.swing.JButton();
        boton1 = new javax.swing.JButton();
        boton2 = new javax.swing.JButton();
        boton3 = new javax.swing.JButton();
        boton0 = new javax.swing.JButton();
        botonPunto = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuOpciones2 = new javax.swing.JMenu();
        itemCalculadora = new javax.swing.JMenuItem();
        itemConversor = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        botonSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor de Divisas");

        panel2.setLayout(new java.awt.GridBagLayout());

        etiquetaDivisa1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        etiquetaDivisa1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaDivisa1.setText("$");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 0, 10);
        panel2.add(etiquetaDivisa1, gridBagConstraints);

        etiquetaDinero1.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        etiquetaDinero1.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        panel2.add(etiquetaDinero1, gridBagConstraints);

        comboDivisas1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estados Unidos - Dólar", "México - Peso mexicano", "Europa - Euro" }));
        comboDivisas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDivisas1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 0, 15);
        panel2.add(comboDivisas1, gridBagConstraints);

        etiquetaDivisa2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        etiquetaDivisa2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        etiquetaDivisa2.setText("$");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(15, 15, 0, 10);
        panel2.add(etiquetaDivisa2, gridBagConstraints);

        etiquetaCambio2.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        etiquetaCambio2.setText("0.0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        panel2.add(etiquetaCambio2, gridBagConstraints);

        comboDivisas2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estados Unidos - Dólar", "México - Peso mexicano", "Europa - Euro" }));
        comboDivisas2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDivisas2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 15, 15);
        panel2.add(comboDivisas2, gridBagConstraints);

        botonClear.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        botonClear.setText("C");
        botonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonClearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(botonClear, gridBagConstraints);

        botoonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delteIcon.jpg"))); // NOI18N
        botoonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoonDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(botoonDelete, gridBagConstraints);

        boton7.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton7.setText("7");
        boton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton7, gridBagConstraints);

        boton8.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton8.setText("8");
        boton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton8, gridBagConstraints);

        boton9.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton9.setText("9");
        boton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton9, gridBagConstraints);

        boton4.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton4.setText("4");
        boton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton4, gridBagConstraints);

        boton5.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton5.setText("5");
        boton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton5, gridBagConstraints);

        boton6.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton6.setText("6");
        boton6.setToolTipText("");
        boton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton6, gridBagConstraints);

        boton1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton1.setText("1");
        boton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton1, gridBagConstraints);

        boton2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton2.setText("2");
        boton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton2, gridBagConstraints);

        boton3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton3.setText("3");
        boton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton3, gridBagConstraints);

        boton0.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        boton0.setText("0");
        boton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(boton0, gridBagConstraints);

        botonPunto.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        botonPunto.setText(".");
        botonPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPuntoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        panel2.add(botonPunto, gridBagConstraints);

        menuOpciones2.setText("Opciones");

        itemCalculadora.setText("Calculadora");
        itemCalculadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCalculadoraActionPerformed(evt);
            }
        });
        menuOpciones2.add(itemCalculadora);

        itemConversor.setText("Conversor de divisas");
        menuOpciones2.add(itemConversor);
        menuOpciones2.add(jSeparator1);

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        menuOpciones2.add(botonSalir);

        jMenuBar1.add(menuOpciones2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void itemCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCalculadoraActionPerformed
        //Para que se abra la otra ventana
        Calculadora calculadora = new Calculadora();
        calculadora.setVisible(true);

        dispose();
    }//GEN-LAST:event_itemCalculadoraActionPerformed

    private void comboDivisas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDivisas1ActionPerformed
        //Para cambiar el signo dependiendo de que moneda se selecciona
        divisa1 = (String) comboDivisas1.getSelectedItem();

        if (divisa1.equals("Estados Unidos - Dólar")) {
            etiquetaDivisa1.setText("$");
        } else if (divisa1.equals("México - Peso mexicano")) {
            etiquetaDivisa1.setText("$");
        } else if (divisa1.equals("Europa - Euro")) {
            etiquetaDivisa1.setText("€");
        }
        //Para que cada vez que se cambie de selector se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_comboDivisas1ActionPerformed

    private void comboDivisas2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDivisas2ActionPerformed
        //Para cambiar el signo dependiendo de que moneda se selecciona
        divisa2 = (String) comboDivisas2.getSelectedItem();

        if (divisa2.equals("Estados Unidos - Dólar")) {
            etiquetaDivisa2.setText("$");
        } else if (divisa2.equals("México - Peso mexicano")) {
            etiquetaDivisa2.setText("$");
        } else if (divisa2.equals("Europa - Euro")) {
            etiquetaDivisa2.setText("€");
        }
        //Para que cada vez que se cambie de selector se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_comboDivisas2ActionPerformed

    private void boton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton1ActionPerformed
        //Para añadir el num 1 a la etiqueta
        //Para que no este el 0 por delante
        if (etiquetaDinero1.getText() == "0") {
            cantidad = "1";//SOlo agrego el uno
        } else {
            cantidad += "1";//Lo agreganos ya que no hay un 0 al principio
        }

        etiquetaDinero1.setText(cantidad);
        //Para que cada vez que se pulse un numero se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_boton1ActionPerformed

    private void boton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton0ActionPerformed
        //Para añadir el num 0 a la etiqueta
        if (cantidad != "") {
            //Para que no este el 0 por delante
            if (etiquetaDinero1.getText() == "0") {
                cantidad = "0";//SOlo agrego el uno
            } else {
                cantidad += "0";;//Lo agreganos ya que no hay un 0 al principio
            }

            etiquetaDinero1.setText(cantidad);
            //Para que cada vez que se pulse un numero se haga la conversion
            obtenerDinero();
        }
    }//GEN-LAST:event_boton0ActionPerformed

    private void boton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton2ActionPerformed
        //Para añadir el num 2 a la etiqueta
        //Para que no este el 0 por delante
        if (etiquetaDinero1.getText() == "0") {
            cantidad = "2";//SOlo agrego el uno
        } else {
            cantidad += "2";//Lo agreganos ya que no hay un 0 al principio
        }

        etiquetaDinero1.setText(cantidad);
        //Para que cada vez que se pulse un numero se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_boton2ActionPerformed

    private void boton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton3ActionPerformed
        //Para añadir el num 3 a la etiqueta
        //Para que no este el 0 por delante
        if (etiquetaDinero1.getText() == "0") {
            cantidad = "3";//SOlo agrego el uno
        } else {
            cantidad += "3";//Lo agreganos ya que no hay un 0 al principio
        }

        etiquetaDinero1.setText(cantidad);
        //Para que cada vez que se pulse un numero se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_boton3ActionPerformed

    private void boton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton4ActionPerformed
        //Para añadir el num 4 a la etiqueta
        //Para que no este el 0 por delante
        if (etiquetaDinero1.getText() == "0") {
            cantidad = "4";//SOlo agrego el uno
        } else {
            cantidad += "4";//Lo agreganos ya que no hay un 0 al principio
        }

        etiquetaDinero1.setText(cantidad);
        //Para que cada vez que se pulse un numero se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_boton4ActionPerformed

    private void boton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton5ActionPerformed
        //Para añadir el num 5 a la etiqueta
        //Para que no este el 0 por delante
        if (etiquetaDinero1.getText() == "0") {
            cantidad = "5";//SOlo agrego el uno
        } else {
            cantidad += "5";//Lo agreganos ya que no hay un 0 al principio
        }

        etiquetaDinero1.setText(cantidad);
        //Para que cada vez que se pulse un numero se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_boton5ActionPerformed

    private void boton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton6ActionPerformed
        //Para añadir el num 6 a la etiqueta
        //Para que no este el 0 por delante
        if (etiquetaDinero1.getText() == "0") {
            cantidad = "6";//SOlo agrego el uno
        } else {
            cantidad += "6";//Lo agreganos ya que no hay un 0 al principio
        }

        etiquetaDinero1.setText(cantidad);
        //Para que cada vez que se pulse un numero se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_boton6ActionPerformed

    private void boton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton7ActionPerformed
        //Para añadir el num 7 a la etiqueta
        //Para que no este el 0 por delante
        if (etiquetaDinero1.getText() == "0") {
            cantidad = "7";//SOlo agrego el uno
        } else {
            cantidad += "7";//Lo agreganos ya que no hay un 0 al principio
        }

        etiquetaDinero1.setText(cantidad);
        //Para que cada vez que se pulse un numero se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_boton7ActionPerformed

    private void boton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton8ActionPerformed
        //Para añadir el num 8 a la etiqueta
        //Para que no este el 0 por delante
        if (etiquetaDinero1.getText() == "0") {
            cantidad = "8";//SOlo agrego el uno
        } else {
            cantidad += "8";//Lo agreganos ya que no hay un 0 al principio
        }

        etiquetaDinero1.setText(cantidad);
        //Para que cada vez que se pulse un numero se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_boton8ActionPerformed

    private void boton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton9ActionPerformed
        //Para añadir el num 9 a la etiqueta
        //Para que no este el 0 por delante
        if (etiquetaDinero1.getText() == "0") {
            cantidad = "9";//SOlo agrego el uno
        } else {
            cantidad += "9";//Lo agreganos ya que no hay un 0 al principio
        }

        etiquetaDinero1.setText(cantidad);
        //Para que cada vez que se pulse un numero se haga la conversion
        obtenerDinero();
    }//GEN-LAST:event_boton9ActionPerformed

    private void botonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonClearActionPerformed
        //Para reiniciar los valores
        cantidad = "";
        etiquetaDinero1.setText("0");
        etiquetaCambio2.setText("0");
        //Para volver a activar el punto
        punto = true;
    }//GEN-LAST:event_botonClearActionPerformed

    private void botoonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoonDeleteActionPerformed
        //Para eliminar un numero que se puso a penas
        int tamaño = cantidad.length();
        if (tamaño > 0) {
            if (tamaño == 1) {
                cantidad = "0";
                etiquetaDinero1.setText(cantidad);
            } else {
                //Para eliminar un numero a la derecha
                cantidad = cantidad.substring(0, cantidad.length() - 1);
                etiquetaDinero1.setText(cantidad);
            }
            obtenerDinero();
        }
    }//GEN-LAST:event_botoonDeleteActionPerformed

    private void botonPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPuntoActionPerformed
        //Para colocar el punto decimal
        //Para ver si ya se uso o no el boton 
        if (punto) {
            if (cantidad == "") {
                //Para que no aparezca el punto solo al no haber nada al principio
                cantidad = "0.";
            } else {
                cantidad += ".";
            }
            etiquetaDinero1.setText(cantidad);
            punto = false;
        }

    }//GEN-LAST:event_botonPuntoActionPerformed

    //Método para obtener el dinero equivalente al escribir un numero
    private void obtenerDinero() {
        //Guardamos el numero que se escribio
        cantidad = etiquetaDinero1.getText();
        dinero = Double.parseDouble(cantidad);//Lo pasamos a Double
        //Mandamos a llamar al metodo que realiza el cambio de monedas
        cambioDivisas();
        //Hacemos la multiplicacion dependiendo de cuanto digito el usuario
        dinero = dinero * cambio;
        //Mostramos el cambio de moneda equivalente en la etiqueta de abajo
        etiquetaCambio2.setText(String.format("%.2f", dinero));

    }

    //Método para hacer el cambio de una moneda a otra
    private void cambioDivisas() {
        if (divisa1.equals(divisa2)) {
            //Si son iguales ñas monedas entonces es uno el equivalente
            cambio = 1;
        } else if (divisa1.equals("Estados Unidos - Dólar") && divisa2.equals("México - Peso mexicano")) {

            cambio = 22.10;//1 dolar equivale a 22.10
        } else if (divisa1.equals("Estados Unidos - Dólar") && divisa2.equals("Europa - Euro")) {

            cambio = 0.86;//1 dolar equivale a 0.86 euros
        } else if (divisa1.equals("Europa - Euro") && divisa2.equals("Estados Unidos - Dólar")) {

            cambio = 1.17;//1 euro equivale a 1,17 dolares
        } else if (divisa1.equals("Europa - Euro") && divisa2.equals("México - Peso mexicano")) {

            cambio = 25.78;//1 euro equivale a 25,78
        } else if (divisa1.equals("México - Peso mexicano") && divisa2.equals("Europa - Euro")) {

            cambio = 0.039;//1 peso equivale a 0,039 euros
        } else if (divisa1.equals("México - Peso mexicano") && divisa2.equals("Estados Unidos - Dólar")) {

            cambio = 0.045;//1 peso equivale a 0,045 dolares
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorDivisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorDivisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorDivisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorDivisas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
        } catch (ClassNotFoundException ex) {
            //Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            //Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            //Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            //Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversorDivisas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton0;
    private javax.swing.JButton boton1;
    private javax.swing.JButton boton2;
    private javax.swing.JButton boton3;
    private javax.swing.JButton boton4;
    private javax.swing.JButton boton5;
    private javax.swing.JButton boton6;
    private javax.swing.JButton boton7;
    private javax.swing.JButton boton8;
    private javax.swing.JButton boton9;
    private javax.swing.JButton botonClear;
    private javax.swing.JButton botonPunto;
    private javax.swing.JMenuItem botonSalir;
    private javax.swing.JButton botoonDelete;
    private javax.swing.JComboBox<String> comboDivisas1;
    private javax.swing.JComboBox<String> comboDivisas2;
    private javax.swing.JLabel etiquetaCambio2;
    private javax.swing.JLabel etiquetaDinero1;
    private javax.swing.JLabel etiquetaDivisa1;
    private javax.swing.JLabel etiquetaDivisa2;
    private javax.swing.JMenuItem itemCalculadora;
    private javax.swing.JMenuItem itemConversor;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuOpciones2;
    private javax.swing.JPanel panel2;
    // End of variables declaration//GEN-END:variables
}

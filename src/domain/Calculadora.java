/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package domain;

import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *Calculadora
 * @author Israel Hernández Dorantes
 * @version 1.0 Agosto 2020
 * @since cuarentena
 */
public class Calculadora extends javax.swing.JFrame {

    private double cuentaNumeros;
    private double num1, resultado;
    private String operacion = "nula";
    private boolean activate = true; //Para que sepamos si ya fue apretado un boton y no ocurra un error
    private boolean puntoActivado = false;
    /**
     * Creates new form Calculadora
     */
    public Calculadora() {
        initComponents();
        this.setSize(360, 500);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panel = new javax.swing.JPanel();
        cuentaCalculadora = new javax.swing.JLabel();
        ClearBoton = new javax.swing.JButton();
        botonRaiz = new javax.swing.JButton();
        botonDivision = new javax.swing.JButton();
        botonDelete = new javax.swing.JButton();
        numero7 = new javax.swing.JButton();
        numero8 = new javax.swing.JButton();
        numero9 = new javax.swing.JButton();
        botonMultiplicacion = new javax.swing.JButton();
        boton4 = new javax.swing.JButton();
        boton5 = new javax.swing.JButton();
        boton6 = new javax.swing.JButton();
        bontonRestar = new javax.swing.JButton();
        boton1 = new javax.swing.JButton();
        boton2 = new javax.swing.JButton();
        boton3 = new javax.swing.JButton();
        botonSumar = new javax.swing.JButton();
        botonCambioSigno = new javax.swing.JButton();
        botonPunto = new javax.swing.JButton();
        boton0 = new javax.swing.JButton();
        botonIgual = new javax.swing.JButton();
        EtiquetaMostrar = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuOpciones = new javax.swing.JMenu();
        itemCalculadora = new javax.swing.JMenuItem();
        itemConversorDivisas = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        itemSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora");
        setResizable(false);

        panel.setSize(new java.awt.Dimension(360, 500));
        panel.setLayout(new java.awt.GridBagLayout());

        cuentaCalculadora.setFont(new java.awt.Font("Arial", 0, 40)); // NOI18N
        cuentaCalculadora.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 20);
        panel.add(cuentaCalculadora, gridBagConstraints);

        ClearBoton.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        ClearBoton.setText("C");
        ClearBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBotonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 10, 10);
        panel.add(ClearBoton, gridBagConstraints);

        botonRaiz.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        botonRaiz.setText("√");
        botonRaiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRaizActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 10, 10);
        panel.add(botonRaiz, gridBagConstraints);

        botonDivision.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        botonDivision.setText("÷");
        botonDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDivisionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 10, 10);
        panel.add(botonDivision, gridBagConstraints);

        botonDelete.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        botonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/delteIcon.jpg"))); // NOI18N
        botonDelete.setMaximumSize(new java.awt.Dimension(75, 37));
        botonDelete.setMinimumSize(new java.awt.Dimension(75, 37));
        botonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 10, 10);
        panel.add(botonDelete, gridBagConstraints);

        numero7.setBackground(new java.awt.Color(255, 102, 51));
        numero7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        numero7.setText("7");
        numero7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numero7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        panel.add(numero7, gridBagConstraints);

        numero8.setBackground(new java.awt.Color(255, 102, 51));
        numero8.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        numero8.setText("8");
        numero8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numero8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(numero8, gridBagConstraints);

        numero9.setBackground(new java.awt.Color(255, 102, 51));
        numero9.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        numero9.setText("9");
        numero9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numero9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(numero9, gridBagConstraints);

        botonMultiplicacion.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        botonMultiplicacion.setText("X");
        botonMultiplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMultiplicacionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(botonMultiplicacion, gridBagConstraints);

        boton4.setBackground(new java.awt.Color(255, 102, 51));
        boton4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        boton4.setText("4");
        boton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        panel.add(boton4, gridBagConstraints);

        boton5.setBackground(new java.awt.Color(255, 102, 51));
        boton5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        boton5.setText("5");
        boton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(boton5, gridBagConstraints);

        boton6.setBackground(new java.awt.Color(255, 102, 51));
        boton6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        boton6.setText("6");
        boton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(boton6, gridBagConstraints);

        bontonRestar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        bontonRestar.setText("-");
        bontonRestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bontonRestarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(bontonRestar, gridBagConstraints);

        boton1.setBackground(new java.awt.Color(255, 102, 51));
        boton1.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        boton1.setText("1");
        boton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        panel.add(boton1, gridBagConstraints);

        boton2.setBackground(new java.awt.Color(255, 102, 51));
        boton2.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        boton2.setText("2");
        boton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(boton2, gridBagConstraints);

        boton3.setBackground(new java.awt.Color(255, 102, 51));
        boton3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        boton3.setText("3");
        boton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(boton3, gridBagConstraints);

        botonSumar.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        botonSumar.setText("+");
        botonSumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSumarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(botonSumar, gridBagConstraints);

        botonCambioSigno.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        botonCambioSigno.setText("+/-");
        botonCambioSigno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCambioSignoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 10, 10);
        panel.add(botonCambioSigno, gridBagConstraints);

        botonPunto.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        botonPunto.setText(".");
        botonPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPuntoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(botonPunto, gridBagConstraints);

        boton0.setBackground(new java.awt.Color(255, 102, 51));
        boton0.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        boton0.setText("0");
        boton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(boton0, gridBagConstraints);

        botonIgual.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 24)); // NOI18N
        botonIgual.setText("=");
        botonIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIgualActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
        panel.add(botonIgual, gridBagConstraints);

        EtiquetaMostrar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        panel.add(EtiquetaMostrar, gridBagConstraints);

        menuOpciones.setText("Opciones");

        itemCalculadora.setText("Calculadora");
        itemCalculadora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCalculadoraActionPerformed(evt);
            }
        });
        menuOpciones.add(itemCalculadora);

        itemConversorDivisas.setText("Conversor de divisas");
        itemConversorDivisas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemConversorDivisasActionPerformed(evt);
            }
        });
        menuOpciones.add(itemConversorDivisas);
        menuOpciones.add(jSeparator1);

        itemSalir.setText("Salir");
        itemSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSalirActionPerformed(evt);
            }
        });
        menuOpciones.add(itemSalir);

        jMenuBar1.add(menuOpciones);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemCalculadoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCalculadoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCalculadoraActionPerformed

    private void botonDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDivisionActionPerformed
        if(activate){
            //Para dividir
            num1 = Double.parseDouble(cuentaCalculadora.getText());
            EtiquetaMostrar.setText(cuentaCalculadora.getText() + " / ");
            cuentaCalculadora.setText("0");
            operacion = "dividir";
            activate = false;
            //Para que pueda usar el punto decimal
            puntoActivado = false;
        }
    }//GEN-LAST:event_botonDivisionActionPerformed

    private void itemSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_itemSalirActionPerformed

    private void ClearBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBotonActionPerformed
        //Para reiniciar la cuenta y borrar todo
        this.cuentaCalculadora.setText("0");
        this.puntoActivado = false;
    }//GEN-LAST:event_ClearBotonActionPerformed

    private void botonMultiplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMultiplicacionActionPerformed
        
        if(activate == true){
            //Para multiplicar
            num1 = Double.parseDouble(cuentaCalculadora.getText());
            EtiquetaMostrar.setText(cuentaCalculadora.getText() + " x ");
            cuentaCalculadora.setText("0");
            operacion = "multiplicar";
            //Para que ya no ocurra nada al volver apretar el boton sin agregra otro numero
            activate = false;
            //Para que pueda usar el punto decimal
            puntoActivado = false;
        }
        
    }//GEN-LAST:event_botonMultiplicacionActionPerformed

    private void itemConversorDivisasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemConversorDivisasActionPerformed
        //Para que nos mande a la otra ventana tenemos que crear un objeto de esa ventana
        ConversorDivisas ventana2 = new ConversorDivisas();
        ventana2.setVisible(true);

        //Para quitar la ventana principal y que solo quede la que abrimos
        dispose();
    }//GEN-LAST:event_itemConversorDivisasActionPerformed

    private void boton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton0ActionPerformed
        //Para colocar un 0 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "0");
        } else {
            cuentaCalculadora.setText("0");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;

    }//GEN-LAST:event_boton0ActionPerformed

    private void boton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton3ActionPerformed
        //Para colocar un 3 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "3");
        } else {
            cuentaCalculadora.setText("3");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;
    }//GEN-LAST:event_boton3ActionPerformed

    private void boton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton1ActionPerformed
        //Para colocar un 1 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "1");
        } else {
            cuentaCalculadora.setText("1");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;
    }//GEN-LAST:event_boton1ActionPerformed

    private void boton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton2ActionPerformed
        //Para colocar un 2 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "2");
        } else {
            cuentaCalculadora.setText("2");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;
    }//GEN-LAST:event_boton2ActionPerformed

    private void boton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton4ActionPerformed
        //Para colocar un 0 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "4");
        } else {
            cuentaCalculadora.setText("4");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;
    }//GEN-LAST:event_boton4ActionPerformed

    private void boton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton5ActionPerformed
        //Para colocar un 0 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "5");
        } else {
            cuentaCalculadora.setText("5");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;
    }//GEN-LAST:event_boton5ActionPerformed

    private void boton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton6ActionPerformed
        //Para colocar un 0 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "6");
        } else {
            cuentaCalculadora.setText("6");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;
    }//GEN-LAST:event_boton6ActionPerformed

    private void numero7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numero7ActionPerformed
        //Para colocar un 0 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "7");
        } else {
            cuentaCalculadora.setText("7");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;
    }//GEN-LAST:event_numero7ActionPerformed

    private void numero8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numero8ActionPerformed
        //Para colocar un 0 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "8");
        } else {
            cuentaCalculadora.setText("8");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;
    }//GEN-LAST:event_numero8ActionPerformed

    private void numero9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numero9ActionPerformed
        //Para colocar un 0 en la calculadora
        if (cuentaCalculadora.getText().length() > 0 && !"0".equals(cuentaCalculadora.getText())) {
            cuentaCalculadora.setText(cuentaCalculadora.getText() + "9");
        } else {
            cuentaCalculadora.setText("9");
        }
        //convierto la cuenta a double y la guardo cada vez que se ingresa un numero
        cuentaNumeros = Double.parseDouble(this.cuentaCalculadora.getText());
        //System.out.println(cuentaNumeros);
        //Para que podamos usar una operacion activamos los botones al agregar otro numero
        activate = true;
    }//GEN-LAST:event_numero9ActionPerformed

    private void botonPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPuntoActionPerformed
        //Para poner el punto decimal
        if(!puntoActivado){
            this.cuentaCalculadora.setText(cuentaCalculadora.getText() + ".");
            puntoActivado = true;
        }
        
    }//GEN-LAST:event_botonPuntoActionPerformed

    private void botonSumarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSumarActionPerformed
        
        if(activate){
            num1 = Double.parseDouble(this.cuentaCalculadora.getText());
            //Muestro la cuenta arriba de la otra etiqueta
            EtiquetaMostrar.setText(cuentaCalculadora.getText() + " + ");
            //elimino el texto para agregar mas
            cuentaCalculadora.setText("0");
            //Para que sepamos que operacion se ejecuta
            operacion = "sumar";
            activate = false;
            puntoActivado = false;
        }
        

    }//GEN-LAST:event_botonSumarActionPerformed

    private void botonIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIgualActionPerformed
        //Boton de Igual
        double num2;
        //Comprobamos que operacion se llevo a cabo
        if(operacion.equals("nula")){
            //Mostramos el mismo resultado
            cuentaCalculadora.setText(cuentaCalculadora.getText());
        }else if(operacion.equals("sumar")){
            //Obtenemos el segundo numero que escribio despues de pulsar el boton +
            num2 = Double.parseDouble(cuentaCalculadora.getText());
            resultado = num1 + num2;
            //Para que le diga que solo muestre dos decimales
            cuentaCalculadora.setText(String.format("%.2f", resultado));
            //Para que se muestre la anterior suma 
            EtiquetaMostrar.setText(String.valueOf(resultado));
            //Para que no se este sumando cada vez que aprite la tecla igual sin poner otro numero
            operacion = "nula";
            //Para que pueda usar el punto decimal
            puntoActivado = false;
            
            
        }else if(operacion.equals("restar")){
            //Obtenemos el siguiente numero despues del signo
            num2 = Double.parseDouble(cuentaCalculadora.getText());
            resultado = num1 - num2;
            cuentaCalculadora.setText(String.format("%.2f", resultado));
            //Para que se muestre la anterior suma 
            EtiquetaMostrar.setText(String.valueOf(resultado));
            operacion = "nula";
            //Para que pueda usar el punto decimal
            puntoActivado = false;
           
            
        }else if(operacion.equals("multiplicar")){
            
            num2 = Double.parseDouble(cuentaCalculadora.getText());
            resultado = num1 * num2;
            cuentaCalculadora.setText(String.format("%.2f", resultado));
            //Para que se muestre la anterior suma 
            EtiquetaMostrar.setText(String.valueOf(resultado));
            operacion = "nula";
            //Para que pueda usar el punto decimal
            puntoActivado = false;
            
            
        }else if(operacion.equals("dividir")){
            num2 = Double.parseDouble(cuentaCalculadora.getText());
            resultado = num1 / num2;
            cuentaCalculadora.setText(String.format("%.2f", resultado));
            //Para que se muestre la anterior suma 
            EtiquetaMostrar.setText(String.valueOf(resultado));
            operacion = "nula";
            //Para que pueda usar el punto decimal
            puntoActivado = false;
            
            
        }
        
        //Para que ya no aparezaca en la etiquetaMostrar las operaciones
        EtiquetaMostrar.setText("");
    }//GEN-LAST:event_botonIgualActionPerformed

    private void botonCambioSignoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCambioSignoActionPerformed
        //Para cambiar de signo
        if(cuentaCalculadora.getText().charAt(0) != '-'){//si no tiene signo se lo pongo
            cuentaCalculadora.setText("-"+cuentaCalculadora.getText());
        }else{
            //Si si tiene signo se lo quitamos cortando el string
            cuentaCalculadora.setText(cuentaCalculadora.getText().substring(1,cuentaCalculadora.getText().length()));
        }
        
    }//GEN-LAST:event_botonCambioSignoActionPerformed

    private void bontonRestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bontonRestarActionPerformed
        
        if(activate){
            //Para restar
            num1 = Double.parseDouble(cuentaCalculadora.getText());
            //Muestro arriba la cuenta que llevamos
            EtiquetaMostrar.setText(cuentaCalculadora.getText() + " - ");
            //Cambiamos la cuenta a 0 
            cuentaCalculadora.setText("0");
            //Decimos que opereacion se lleva a cabo
            operacion = "restar";
            activate = false;
            //Para que pueda usar el punto decimal
            puntoActivado = false;
        }
    }//GEN-LAST:event_bontonRestarActionPerformed

    private void botonRaizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRaizActionPerformed
        
        if(activate){
            //Para realizar una raiz
            num1 = cuentaNumeros;
            EtiquetaMostrar.setText(" √ " + cuentaCalculadora.getText());
            resultado = Math.sqrt(num1);
            cuentaCalculadora.setText(String.format("%.2f", resultado));
            operacion = "nula";
            activate = false;
            //Para que pueda usar el punto decimal
            puntoActivado = false;
        }
        
    }//GEN-LAST:event_botonRaizActionPerformed

    private void botonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDeleteActionPerformed
        //Para eliminar un numero que se ingreso
        int tamaño = cuentaCalculadora.getText().length();
        if(tamaño>0){
            if(tamaño == 1){//Para que si solo hay un digito se quede en 0
                cuentaCalculadora.setText("0");
                
            }else{
            
                //Para eliminar un numero a la derecha
                cuentaCalculadora.setText(cuentaCalculadora.getText().substring(0, cuentaCalculadora.getText().length() - 1));
            }
        }
    }//GEN-LAST:event_botonDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
        } catch (ClassNotFoundException ex) {
            //Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            //Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            //Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            //Logger.getLogger(Calculadora.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearBoton;
    private javax.swing.JLabel EtiquetaMostrar;
    private javax.swing.JButton bontonRestar;
    private javax.swing.JButton boton0;
    private javax.swing.JButton boton1;
    private javax.swing.JButton boton2;
    private javax.swing.JButton boton3;
    private javax.swing.JButton boton4;
    private javax.swing.JButton boton5;
    private javax.swing.JButton boton6;
    private javax.swing.JButton botonCambioSigno;
    private javax.swing.JButton botonDelete;
    private javax.swing.JButton botonDivision;
    private javax.swing.JButton botonIgual;
    private javax.swing.JButton botonMultiplicacion;
    private javax.swing.JButton botonPunto;
    private javax.swing.JButton botonRaiz;
    private javax.swing.JButton botonSumar;
    private javax.swing.JLabel cuentaCalculadora;
    private javax.swing.JMenuItem itemCalculadora;
    private javax.swing.JMenuItem itemConversorDivisas;
    private javax.swing.JMenuItem itemSalir;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuOpciones;
    private javax.swing.JButton numero7;
    private javax.swing.JButton numero8;
    private javax.swing.JButton numero9;
    private javax.swing.JPanel panel;
    // End of variables declaration//GEN-END:variables

}
